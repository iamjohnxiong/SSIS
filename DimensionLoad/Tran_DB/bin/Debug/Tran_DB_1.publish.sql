/*
Deployment script for Local_Tran

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Local_Tran"
:setvar DefaultFilePrefix "Local_Tran"
:setvar DefaultDataPath "C:\Users\jxiong\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\jxiong\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 5915a862-9e11-4e80-a0a1-54c845068e86 is skipped, element [dbo].[tblCustomer].[Id] (SqlSimpleColumn) will not be renamed to cstId';


GO
PRINT N'Rename refactoring operation with key 3fb148db-0fcb-46eb-8631-890ca2650783 is skipped, element [dbo].[tblCustomer].[cstGuide] (SqlSimpleColumn) will not be renamed to cstGuid';


GO
PRINT N'Creating [dbo].[tblCustomer]...';


GO
CREATE TABLE [dbo].[tblCustomer] (
    [cstId]        INT              NOT NULL,
    [cstFirstName] VARCHAR (50)     NOT NULL,
    [cstLastName]  VARCHAR (50)     NOT NULL,
    [cstEmail]     VARCHAR (50)     NOT NULL,
    [cstGender]    CHAR (1)         NOT NULL,
    [cstSSN]       CHAR (11)        NOT NULL,
    [cstGuid]      UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([cstId] ASC)
);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5915a862-9e11-4e80-a0a1-54c845068e86')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5915a862-9e11-4e80-a0a1-54c845068e86')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3fb148db-0fcb-46eb-8631-890ca2650783')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3fb148db-0fcb-46eb-8631-890ca2650783')

GO

GO
PRINT N'Update complete.';


GO
